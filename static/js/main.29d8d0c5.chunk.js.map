{"version":3,"sources":["Logo.js","Header.js","Card.js","Footer.js","App.js","serviceWorker.js","index.js","lego.jpg"],"names":["Logo","className","xmlns","viewBox","fill","d","cx","cy","r","Header","props","date","Card","name","src","Lego","alt","Footer","state","comments","retweets","likes","IncrementComments","setState","IncrementLikes","IncrementRetweets","onClick","this","Component","App","Date","getDate","month","getMonth","year","getFullYear","ReactDOM","render","document","getElementById","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"gNAeeA,EAbF,WAEb,OACA,yBAAKC,UAAU,OAAOC,MAAM,6BAA6BC,QAAQ,mBAC7D,uBAAGC,KAAK,WACJ,0BAAMC,EAAE,m6EACR,4BAAQC,GAAG,QAAQC,GAAG,QAAQC,EAAE,SAChC,0BAAMH,EAAE,oBCWDI,EAhBA,SAACC,GAChB,OACE,yBAAKT,UAAU,UACf,kBAAC,EAAD,MACA,6BACA,6CACA,6CACA,wCAEA,uBAAGA,UAAU,QAAb,iBAAoCS,EAAMC,Q,gBCO7BC,EAjBF,SAACF,GACd,OACE,yBAAKT,UAAU,QACX,yDACA,kFACA,mDACA,gDACA,2DACA,yBAAKA,UAAU,YACX,gCAAMS,EAAMG,KAAZ,KACA,yBAAKC,IAAKC,IAAMC,IAAI,gBC0BfC,E,2MAnCfC,MAAQ,CACHC,SAAU,EACVC,SAAU,EACVC,MAAO,G,EAGZC,kBAAoB,WAClB,EAAKC,SAAS,CAAEJ,SAAU,EAAKD,MAAMC,SAAW,K,EAGlDK,eAAiB,WACf,EAAKD,SAAS,CAAEF,MAAO,EAAKH,MAAMG,MAAQ,K,EAG5CI,kBAAoB,WAClB,EAAKF,SAAS,CAAEH,SAAU,EAAKF,MAAME,SAAW,K,wEAIhD,OACE,yBAAKnB,UAAU,UACb,wDACA,oHACF,yBAAKA,UAAU,UACf,uBAAGA,UAAU,OAAb,qBACA,4BAAQA,UAAU,gBAAgByB,QAASC,KAAKL,mBAAhD,YAAoF,2BAAIK,KAAKT,MAAMC,UACnG,4BAAQlB,UAAU,aAAayB,QAASC,KAAKH,gBAA7C,SAHA,IAG4E,2BAAIG,KAAKT,MAAMG,OAC3F,4BAAQpB,UAAU,gBAAgByB,QAASC,KAAKF,mBAAhD,YAJA,IAIqF,2BAAIE,KAAKT,MAAME,gB,GA7BnFQ,aCKfC,E,2MAEJX,MAAQ,CACJP,KAAM,I,mFAIR,IACMA,GAAO,IAAImB,MAAOC,UAClBC,GAAQ,IAAIF,MAAOG,WAAa,EAChCC,GAAO,IAAIJ,MAAOK,cAHXR,KAKRJ,SAAS,CAEZZ,KACEA,EAAO,IAAMqB,EAAQ,IAAME,M,+BAM3B,OACI,6BACI,yBAAKjC,UAAU,QACX,kBAAC,EAAD,CACAU,KAAQgB,KAAKT,MAAMP,OAEnB,kBAAC,EAAD,CACAE,KAAK,aAEL,kBAAC,EAAD,Y,GA9BFe,aAsClBQ,IAASC,OACT,kBAAC,EAAD,MACAC,SAASC,eAAe,SAGTV,QCtCKW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNR,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBM,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBErInBC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.29d8d0c5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Logo = () => {\n\nreturn(\n<svg className=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\">\n    <g fill=\"#61DAFB\">\n        <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/>\n        <circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/>\n        <path d=\"M520.5 78.1z\"/>\n    </g>\n</svg>\n);\n}\n\nexport default Logo;\n","import React from 'react';\nimport Logo from './Logo.js';\n\n\nconst Header = (props) => {\nreturn(\n  <div className=\"header\">\n  <Logo />\n  <div>\n  <p>Social Card UI</p>\n  <p>Learning React</p>\n  <p>Joe Robb</p>\n  </div>\n  <p className=\"info\">Today's Date: { props.date }</p>\n  </div>\n);\n\n}\n\n\nexport default Header;\n","import React from 'react';\nimport Lego from './lego.jpg';\n\nconst Card = (props) => {\nreturn(\n  <div className=\"card\">\n      <h1> This is a Social Card UI</h1>\n      <h2> The aim is to break everything up into components</h2>\n      <h3> Nothing heavy duty</h3>\n      <h4>A few props here</h4>\n      <h5>A little bit of state there</h5>\n      <div className=\"cardInfo\">\n          <h2> {props.name} </h2>\n          <img src={Lego} alt=\"Lego Man\" />\n      </div>\n  </div>\n);\n\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n\nstate = {\n     comments: 5,\n     retweets: 1,\n     likes: 8\n};\n\nIncrementComments = () => {\n  this.setState({ comments: this.state.comments + 1 });\n}\n\nIncrementLikes = () => {\n  this.setState({ likes: this.state.likes + 1 });\n}\n\nIncrementRetweets = () => {\n  this.setState({ retweets: this.state.retweets + 1 });\n}\n\n  render() {\n  return (\n    <div className=\"footer\">\n      <h3>Here's a little headline</h3>\n      <p>Here's a little bit more info about the little headline, to fill the space out a bit.</p>\n    <div className=\"social\">\n    <p className=\"url\">joerobb.github.io</p>\n    <button className=\"commentButton\" onClick={this.IncrementComments}>Comment </button><p>{this.state.comments}</p>\n    <button className=\"likeButton\" onClick={this.IncrementLikes}>Like </button> <p>{this.state.likes}</p>\n    <button className=\"retweetButton\" onClick={this.IncrementRetweets}>Retweet </button> <p>{this.state.retweets}</p>\n    </div>\n    </div>\n  );\n}\n\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Header from './Header.js';\nimport Card from './Card.js';\nimport Footer from './Footer.js';\n\n\nclass App extends Component {\n\n  state = {\n      date: '',\n    };\n\n  componentDidMount() {\n    const that = this;\n    const date = new Date().getDate(); //Current Date\n    const month = new Date().getMonth() + 1; //Current Month\n    const year = new Date().getFullYear(); //Current Year\n\n    that.setState({\n      //Setting the value of the date time\n      date:\n        date + '/' + month + '/' + year,\n    });\n  }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"body\">\n                    <Header\n                    date = {this.state.date}\n                     />\n                    <Card\n                    name=\"Joe Robb\"\n                      />\n                    <Footer />\n                </div>\n            </div>\n        );\n    }\n}\n\n\nReactDOM.render(\n<App  />,\ndocument.getElementById('root')\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/lego.847b8d95.jpg\";"],"sourceRoot":""}